// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramNotifierService.Data.Database;

#nullable disable

namespace TelegramNotifierService.Migrations
{
    [DbContext(typeof(TelegramNotifyingContext))]
    partial class TelegramNotifyingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("TelegramNotifierService.Data.Database.Entities.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<long>("ConsumerId")
                        .HasColumnType("bigint")
                        .HasColumnName("consumer_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "category_id");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("TelegramNotifierService.Data.Database.Entities.SubscriptionCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .IsUnique();

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("TelegramNotifierService.Data.Database.Entities.Subscription", b =>
                {
                    b.HasOne("TelegramNotifierService.Data.Database.Entities.SubscriptionCategory", "Category")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("subscriptions_ibfk_1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TelegramNotifierService.Data.Database.Entities.SubscriptionCategory", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
